package poc.todo.dao;

import poc.todo.model.Todo;

import java.util.List;

/**
 * Data Access Object (DAO) interface for managing "Todo" entities.
 * Provides CRUD (Create, Read, Update, Delete) operations and other utility methods for Todo items.
 */
public interface TodoDao {

    /**
     * Finds and retrieves all Todo items.
     *
     * @return a list of all Todo items.
     */
    List<Todo> findAll();

    /**
     * Finds a specific Todo item by its ID.
     *
     * @param id the ID of the Todo item to find.
     * @return the Todo item with the given ID, or null if not found.
     */
    Todo findById(long id);

    /**
     * Saves a new Todo item.
     *
     * @param todo the Todo item to save.
     * @return the saved Todo item, with any autogenerated ID field populated,
     */
    Todo save(Todo todo);

    /**
     * Deletes a Todo item by its ID.
     *
     * @param id the ID of the Todo item to delete.
     */
    void deleteById(long id);

    /**
     * Checks if a Todo item exists by its ID.
     *
     * @param id the ID to check.
     * @return true if a Todo item with the given ID exists, false otherwise.
     */
    boolean existsById(long id);

    /**
     * Gets the maximum ID currently assigned to any Todo item.
     *
     * @return a list containing the maximum Todo ID.
     */
    List<Long> getMaxTodoId();

    /**
     * Updates a Todo item by its ID.
     *
     * @param todo the Todo item with updated values.
     * @return the updated Todo item, or null if the ID does not exist.
     */
    Todo updateById(Todo todo);
}
